{"version":3,"sources":["Components/Section/Section.js","Components/Statistics/Statistics.js","Components/Button/Button.js","Components/Statistics/Notification.js","Components/CounterFeedback/CounterFeedback.js","Components/App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Button","CounterFeedback","type","onClick","Notification","message","state","handleButtonGood","setState","prevState","props","step","handleButtonNeutral","handleButtonBad","totalFeedback","calculateFeedback","Number","Math","round","this","Component","App","defaultProps","ReactDom","render","document","getElementById"],"mappings":"wLAQeA,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BACE,2BAAID,GACJ,6BAAMC,K,4BCeKC,EAjBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,6CAAmBJ,GACnB,gDAAsBC,GACtB,4CAAkBC,GAClB,8CAAoBC,GACpB,iDAAuBC,KCGZC,EATA,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAUQ,EAAb,EAAaA,gBAAb,OACb,4BAAQC,KAAK,SAASC,QAASF,GAC5BR,ICAUW,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICErBJ,E,4MAEnBK,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,iBAAmB,WACjB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,KAAMc,EAAUd,KAAO,EAAKe,MAAMC,U,EAGtCC,oBAAsB,WACpB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1Bb,QAASa,EAAUb,QAAU,EAAKc,MAAMC,U,EAG5CE,gBAAkB,WAChB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BZ,IAAKY,EAAUZ,IAAM,EAAKa,MAAMC,U,EAGpCG,cAAgB,WACd,OAAO,EAAKR,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAE3DE,mBAAqB,WACnB,IAAMgB,EAAoB,EAAKT,MAAMX,KAAOqB,OAAO,EAAKF,iBAExD,OAD2BG,KAAKC,MAA0B,IAApBH,I,uDAItC,OACE,6BACE,kBAAC,EAAD,CAAQd,gBAAiBkB,KAAKZ,kBAA9B,QACA,kBAAC,EAAD,CAAQN,gBAAiBkB,KAAKP,qBAA9B,WACA,kBAAC,EAAD,CAAQX,gBAAiBkB,KAAKN,iBAA9B,OAC0B,IAAzBM,KAAKL,gBACJ,kBAAC,EAAD,CAAcT,QAAQ,sBAEtB,kBAAC,EAAD,CACEV,KAAMwB,KAAKb,MAAMX,KACjBC,QAASuB,KAAKb,MAAMV,QACpBC,IAAKsB,KAAKb,MAAMT,IAChBC,MAAOqB,KAAKL,gBACZf,mBAAoBoB,KAAKpB,4B,GA7CQqB,aCD9B,SAASC,IACtB,OACE,6BACE,kBAAC,EAAD,CAAS7B,MAAM,yBAKf,kBAAC,EAAD,CAASA,MAAM,cACb,kBAAC,EAAD,QDRaS,EACZqB,aAAe,CAAEX,KAAM,GEFhCY,IAASC,OAAO,kBAACH,EAAD,MAASI,SAASC,eAAe,U","file":"static/js/main.c2ca89d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <p>{title}</p>\r\n    <div>{children}</div>\r\n  </div>\r\n);\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p>Good feedback: {good}</p>\r\n    <p>Neutral feedback: {neutral}</p>\r\n    <p>Bad feedback: {bad}</p>\r\n    <p>Total feedback: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}</p>\r\n  </div>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ children, CounterFeedback }) => (\r\n  <button type=\"button\" onClick={CounterFeedback}>\r\n    {children}\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  CounterFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\nNotification.propTypes = { message: PropTypes.string.isRequired };\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from 'Components/Statistics/Statistics';\r\nimport Button from '../Button/Button';\r\nimport Notification from '../Statistics/Notification';\r\n\r\nexport default class CounterFeedback extends Component {\r\n  static defaultProps = { step: 1 };\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleButtonGood = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + this.props.step,\r\n    }));\r\n  };\r\n  handleButtonNeutral = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + this.props.step,\r\n    }));\r\n  };\r\n  handleButtonBad = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + this.props.step,\r\n    }));\r\n  };\r\n  totalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n  positivePercentage = () => {\r\n    const calculateFeedback = this.state.good / Number(this.totalFeedback());\r\n    const positivePercentage = Math.round(calculateFeedback * 100);\r\n    return positivePercentage;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button CounterFeedback={this.handleButtonGood}>Good</Button>\r\n        <Button CounterFeedback={this.handleButtonNeutral}>Neutral</Button>\r\n        <Button CounterFeedback={this.handleButtonBad}>Bad</Button>\r\n        {this.totalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.totalFeedback()}\r\n            positivePercentage={this.positivePercentage()}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Section from './Section/Section';\r\nimport CounterFeedback from './CounterFeedback/CounterFeedback';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Section title=\"Please live feedback\">\r\n        {/* <Button CounterFeedback={CounterFeedback}>Good</Button>\r\n        <Button>Neutral</Button>\r\n        <Button>Bad</Button> */}\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        <CounterFeedback />\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './Components/App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}